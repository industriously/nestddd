/**
 * @packageDocumentation
 * @module api.functional.user
 * @nestia Generated by Nestia - https://github.com/samchon/nestia 
 */
//================================================================
import { Fetcher } from "@nestia/fetcher";
import type { IConnection } from "@nestia/fetcher";
import typia from "typia";

import type { UserSchema } from "./../../interface/user/user.schema.interface";

/**
 * @tag user
 * 
 * @controller UserController.getProfile()
 * @path GET /user
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export function getProfile
    (
        connection: IConnection
    ): Promise<getProfile.Output>
{
    return Fetcher.fetch
    (
        connection,
        getProfile.ENCRYPTED,
        getProfile.METHOD,
        getProfile.path()
    );
}
export namespace getProfile
{
    export type Output = UserSchema.Detail;

    export const METHOD = "GET" as const;
    export const PATH: string = "/user";
    export const ENCRYPTED: Fetcher.IEncrypted = {
        request: false,
        response: false,
    };

    export function path(): string
    {
        return `/user`;
    }
}

/**
 * @tag user
 * 
 * @controller UserController.getPublicProfile()
 * @path GET /user/:user_id
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export function getPublicProfile
    (
        connection: IConnection,
        id: string
    ): Promise<getPublicProfile.Output>
{
    return Fetcher.fetch
    (
        connection,
        getPublicProfile.ENCRYPTED,
        getPublicProfile.METHOD,
        getPublicProfile.path(id)
    );
}
export namespace getPublicProfile
{
    export type Output = UserSchema.Public;

    export const METHOD = "GET" as const;
    export const PATH: string = "/user/:user_id";
    export const ENCRYPTED: Fetcher.IEncrypted = {
        request: false,
        response: false,
    };

    export function path(id: string): string
    {
        return `/user/${encodeURIComponent(id)}`;
    }
}

/**
 * @tag user
 * 
 * @controller UserController.updateProfile()
 * @path PATCH /user
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export function updateProfile
    (
        connection: IConnection,
        body: Partial<Pick<UserSchema.Aggregate, "username" | "address" | "phone">>
    ): Promise<void>
{
    return Fetcher.fetch
    (
        connection,
        updateProfile.ENCRYPTED,
        updateProfile.METHOD,
        updateProfile.path(),
        body,
        updateProfile.stringify
    );
}
export namespace updateProfile
{
    export type Input = Partial<Pick<UserSchema.Aggregate, "username" | "address" | "phone">>;

    export const METHOD = "PATCH" as const;
    export const PATH: string = "/user";
    export const ENCRYPTED: Fetcher.IEncrypted = {
        request: false,
        response: false,
    };

    export function path(): string
    {
        return `/user`;
    }
    export const stringify = (input: Input) => typia.assertStringify(input);
}

/**
 * @tag user
 * 
 * @controller UserController.inActivate()
 * @path DELETE /user
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export function inActivate
    (
        connection: IConnection
    ): Promise<void>
{
    return Fetcher.fetch
    (
        connection,
        inActivate.ENCRYPTED,
        inActivate.METHOD,
        inActivate.path()
    );
}
export namespace inActivate
{

    export const METHOD = "DELETE" as const;
    export const PATH: string = "/user";
    export const ENCRYPTED: Fetcher.IEncrypted = {
        request: false,
        response: false,
    };

    export function path(): string
    {
        return `/user`;
    }
}